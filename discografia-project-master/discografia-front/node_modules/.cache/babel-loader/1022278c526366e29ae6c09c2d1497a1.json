{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nvar state = {\n  //ou venda\n  albums: [{\n    tracks: []\n  }],\n  artist: {\n    name: ''\n  },\n  trackEdit: {//when open a screen for trackedit\n  },\n  albumEdit: {}\n};\nvar actions = {\n  getAlbums: function getAlbums(_ref) {\n    var commit = _ref.commit;\n    //update to use AXIOS,\n    return new Promise(function () {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"Accept\", \"application/json\");\n      var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n      fetch(process.env.BACK_URL + \"albums\", requestOptions).then(function (response) {\n        return response.text();\n      }).then(function (result) {\n        result = JSON.parse(result);\n        commit('getAlbums', result);\n      }).catch(function (error) {\n        return console.log('error', error);\n      });\n    });\n  }\n};\nvar mutations = {\n  getAlbums: function getAlbums(state, result) {\n    console.log(result);\n    state.albuns = result;\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["state","albums","tracks","artist","name","trackEdit","albumEdit","actions","getAlbums","commit","Promise","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","process","env","BACK_URL","then","response","text","result","JSON","parse","catch","error","console","log","mutations","albuns"],"sources":["/var/www/html/discografia-project/discografia-front/src/store/modules/discography.js"],"sourcesContent":["const state = {//ou venda\n    albums:[{\n        tracks:[],\n    }],\n    artist:{\n        name:'',\n    },\n    trackEdit:{//when open a screen for trackedit\n\n    },\n    albumEdit:{\n\n    }\n}\n\nconst actions = { \n    getAlbums({commit}){\n        //update to use AXIOS,\n        return new Promise(()=>{\n            var myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n                myHeaders.append(\"Accept\", \"application/json\");\n            var requestOptions = {\n                method: 'GET',\n                headers: myHeaders,\n                redirect: 'follow'\n                };\n            fetch(process.env.BACK_URL+\"albums\", requestOptions)\n            .then(response => response.text())\n            .then(result =>{\n                result = JSON.parse(result);\n                commit('getAlbums', result);\n            })\n            .catch(error => console.log('error', error));\n        })\n    }\n}\n\nconst mutations = {\n    getAlbums(state,result){\n        console.log(result);\n        state.albuns = result;\n    }\n}\nexport default {\n    state,\n    actions,\n    mutations,\n  };"],"mappings":";AAAA,IAAMA,KAAK,GAAG;EAAC;EACXC,MAAM,EAAC,CAAC;IACJC,MAAM,EAAC;EADH,CAAD,CADG;EAIVC,MAAM,EAAC;IACHC,IAAI,EAAC;EADF,CAJG;EAOVC,SAAS,EAAC,CAAC;EAAD,CAPA;EAUVC,SAAS,EAAC;AAVA,CAAd;AAeA,IAAMC,OAAO,GAAG;EACZC,SADY,2BACO;IAAA,IAARC,MAAQ,QAARA,MAAQ;IACf;IACA,OAAO,IAAIC,OAAJ,CAAY,YAAI;MACnB,IAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;MACID,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;MACAF,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,kBAA3B;MACJ,IAAIC,cAAc,GAAG;QACjBC,MAAM,EAAE,KADS;QAEjBC,OAAO,EAAEL,SAFQ;QAGjBM,QAAQ,EAAE;MAHO,CAArB;MAKAC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAqB,QAAtB,EAAgCP,cAAhC,CAAL,CACCQ,IADD,CACM,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;MAAA,CADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAG;QACXA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAT;QACAhB,MAAM,CAAC,WAAD,EAAcgB,MAAd,CAAN;MACH,CALD,EAMCG,KAND,CAMO,UAAAC,KAAK;QAAA,OAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;MAAA,CANZ;IAOH,CAhBM,CAAP;EAiBH;AApBW,CAAhB;AAuBA,IAAMG,SAAS,GAAG;EACdxB,SADc,qBACJR,KADI,EACEyB,MADF,EACS;IACnBK,OAAO,CAACC,GAAR,CAAYN,MAAZ;IACAzB,KAAK,CAACiC,MAAN,GAAeR,MAAf;EACH;AAJa,CAAlB;AAMA,eAAe;EACXzB,KAAK,EAALA,KADW;EAEXO,OAAO,EAAPA,OAFW;EAGXyB,SAAS,EAATA;AAHW,CAAf"},"metadata":{},"sourceType":"module"}