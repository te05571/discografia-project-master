{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { format } from 'date-fns';\nexport default {\n  name: 'AlbumsComponent',\n  computed: {\n    albums: function albums() {\n      return this.$store.state.discography.albums;\n    }\n  },\n  data: function data() {\n    return {\n      search: '',\n      headerTrack: [{\n        text: 'name',\n        align: 'start',\n        sortable: false,\n        value: 'album_order'\n      }, {\n        text: 'faixa',\n        align: 'start',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'durção',\n        align: 'start',\n        sortable: false,\n        value: 'duration'\n      }],\n      headerAlbum: [{\n        text: 'name',\n        align: 'start',\n        sortable: false,\n        value: 'name'\n      }],\n      rules: {\n        albumName: [function (val) {\n          return (val || '').length > 0 || 'necessário informar o nome do album!';\n        }],\n        albumRelease: [function (val) {\n          return (val || '').length > 0 || 'necessário informar o lançamento do album!';\n        }]\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    console.log(\"em dispach\");\n    this.$store.dispatch('getAlbums');\n  },\n  methods: {\n    returnYearRelease: function returnYearRelease(dateTime) {\n      return format(new Date(dateTime), \"yyyy\");\n    },\n    detailAlbum: function detailAlbum(row) {\n      return row;\n    },\n    detailTrack: function detailTrack(row) {\n      return row;\n    },\n    newAlbum: function newAlbum(album) {\n      console.log(album);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;EACAA,uBADA;EAEAC;IACAC,MADA,oBACA;MACA;IACA;EAHA,CAFA;EAOAC;IACA;MACAC,UADA;MAEAC,cACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,CAFA,EAGA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,CAHA,CAFA;MAOAC,cACA;QAAAJ;QAAAC;QAAAC;QAAAC;MAAA,CADA,CAPA;MAUAE;QACAC,YACA;UAAA;QAAA,CADA,CADA;QAIAC,eACA;UAAA;QAAA,CADA;MAJA;IAVA;EAmBA,CA3BA;EA4BAC,WA5BA,yBA4BA;IACAC;IACA;EACA,CA/BA;EAgCAC;IACAC,iBADA,6BACAC,QADA,EACA;MACA;IACA,CAHA;IAIAC,WAJA,uBAIAC,GAJA,EAIA;MACA;IACA,CANA;IAOAC,WAPA,uBAOAD,GAPA,EAOA;MACA;IACA,CATA;IAUAE,QAVA,oBAUAC,KAVA,EAUA;MACAR;IACA;EAZA;AAhCA","names":["name","computed","albums","data","search","headerTrack","text","align","sortable","value","headerAlbum","rules","albumName","albumRelease","beforeMount","console","methods","returnYearRelease","dateTime","detailAlbum","row","detailTrack","newAlbum","album"],"sourceRoot":"src/components","sources":["AlbumsComponent.vue"],"sourcesContent":["<template>\n  <v-card style=\"background: rgba(255, 255, 255, 0.0);\">\n    <v-row class='pa-6' >\n    <!-- addALbum -->\n      \n      <!-- endAddAlbum -->\n      <v-text-field\n      v-model=\"search\"\n      append-icon=\"mdi-magnify\"\n      label=\"Procure um album...\"\n      single-line\n      dense\n      >\n      </v-text-field>\n    </v-row>\n    \n    <v-data-table   \n        :items=\"albums\"\n        :search=\"search\" \n        fixed-header\n        :headers=\"headerAlbum\"\n        calculate-widths\n        hide-default-footer\n        hide-default-header\n        dense                \n        :items-per-page=\"-1\"\n        style=\"height: 65vh;background-color: rgba(255, 255, 255, 0.0);\"\n        class=\"overflow-y-auto pa-3\"\n        >\n        <template  v-slot:item=\"row\" >\n            <tr @click='detailAlbum(row.item)'>\n                <td class='ma-0 pa-0 pr-1'>\n                  <v-icon size=\"20\" color=\"black\">fa fa-compact-disc</v-icon>\n                  {{row.item.name}},{{returnYearRelease(row.item.release_date)}}\n                  <v-list dense style=\"background-color: rgba(255, 255, 255, 0.0);\" rounded>\n                    <v-list-item\n                      v-for=\"track in row.item.tracks\"\n                      :key=\"track.id\"\n                      @click='detailTrack(track)'\n                    >\n                      <v-list-item-icon>\n                        <v-icon size=\"15\" color=\"black\">fa fa-play</v-icon>\n                      </v-list-item-icon>\n                      <v-list-item-content>\n                        <v-list-item-title >\n                          <div>{{ track.name }}</div>\n                        </v-list-item-title>\n                        <v-list-item-subtitle>\n                            {{ track.duration }}\n                        </v-list-item-subtitle>\n                      </v-list-item-content>\n                    </v-list-item>\n                  </v-list>\n                </td>\n            </tr>\n        </template>\n    </v-data-table>\n  </v-card>\n</template>\n\n<script>\nimport { format } from 'date-fns'\n  export default {\n    name: 'AlbumsComponent',\n    computed:{\n      albums(){\n        return this.$store.state.discography.albums\n      },\n    },\n    data:()=>{\n      return {\n        search: '',\n        headerTrack:[\n          { text: 'name',align: 'start',sortable: false,value: 'album_order'},\n          { text: 'faixa',align: 'start',sortable: false,value: 'name'},\n          { text: 'durção',align:'start',sortable: false,value: 'duration' },\n        ],\n        headerAlbum:[\n          { text: 'name',align: 'start',sortable: false,value: 'name'},\n        ],\n        rules:{\n          albumName: [\n              val => (val || '').length > 0 || 'necessário informar o nome do album!'\n          ],\n          albumRelease: [\n              val => (val || '').length > 0 || 'necessário informar o lançamento do album!'\n          ],\n        }\n      }\n    },\n    beforeMount(){\n        console.log(\"em dispach\")\n        this.$store.dispatch('getAlbums');\n    },\n    methods:{\n      returnYearRelease(dateTime){\n        return format(new Date(dateTime), \"yyyy\")\n      },\n      detailAlbum(row){\n        return row;\n      },\n      detailTrack(row){\n        return row\n      },\n      newAlbum(album){\n        console.log(album);\n      }\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}